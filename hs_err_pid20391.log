#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 16384 bytes for committing reserved memory.
# Possible reasons:
#   The system is out of physical RAM or swap space
#   The process is running with CompressedOops enabled, and the Java Heap may be blocking the growth of the native heap
# Possible solutions:
#   Reduce memory load on the system
#   Increase physical memory or swap space
#   Check if swap backing store is full
#   Decrease Java heap size (-Xmx/-Xms)
#   Decrease number of Java threads
#   Decrease Java thread stack sizes (-Xss)
#   Set larger code cache with -XX:ReservedCodeCacheSize=
#   JVM is running with Unscaled Compressed Oops mode in which the Java heap is
#     placed in the first 4GB address space. The Java Heap base address is the
#     maximum limit for the native heap growth. Please use -XX:HeapBaseMinAddress
#     to set the Java Heap base and to place the Java Heap above 4GB virtual address.
# This output file may be truncated or incomplete.
#
#  Out of Memory Error (os_linux.cpp:2983), pid=20391, tid=20507
#
# JRE version: OpenJDK Runtime Environment 18.9 (11.0.12+7) (build 11.0.12+7-LTS)
# Java VM: OpenJDK 64-Bit Server VM 18.9 (11.0.12+7-LTS, mixed mode, sharing, tiered, compressed oops, serial gc, linux-amd64)
# No core dump will be written. Core dumps have been disabled. To enable core dumping, try "ulimit -c unlimited" before starting Java again
#

---------------  S U M M A R Y ------------

Command Line: -Xmx64m -Xms64m -Dorg.gradle.appname=gradlew org.gradle.wrapper.GradleWrapperMain build

Host: Intel(R) Xeon(R) CPU E5-2676 v3 @ 2.40GHz, 1 cores, 983M, Amazon Linux release 2 (Karoo)
Time: Sat Sep  4 12:07:48 2021 KST elapsed time: 190.783190 seconds (0d 0h 3m 10s)

---------------  T H R E A D  ---------------

Current thread (0x00007ff4b000f000):  JavaThread "SIGHUP handler" daemon [_thread_new, id=20507, stack(0x00007ff4c8d5c000,0x00007ff4c8e5d000)]

Stack: [0x00007ff4c8d5c000,0x00007ff4c8e5d000],  sp=0x00007ff4c8e5b910,  free space=1022k
Native frames: (J=compiled Java code, A=aot compiled Java code, j=interpreted, Vv=VM code, C=native code)
V  [libjvm.so+0xf2047f]  VMError::report_and_die(int, char const*, char const*, __va_list_tag*, Thread*, unsigned char*, void*, void*, char const*, int, unsigned long)+0x37f
V  [libjvm.so+0xf2114b]  VMError::report_and_die(Thread*, char const*, int, unsigned long, VMErrorType, char const*, __va_list_tag*)+0x2b
V  [libjvm.so+0x6c8d2e]  report_vm_out_of_memory(char const*, int, unsigned long, VMErrorType, char const*, ...)+0x10e
V  [libjvm.so+0xc55a50]  os::pd_commit_memory(char*, unsigned long, bool)+0xf0
V  [libjvm.so+0xc4bffe]  os::commit_memory(char*, unsigned long, bool)+0x2e
V  [libjvm.so+0xc570fe]  os::pd_create_stack_guard_pages(char*, unsigned long)+0x8e
V  [libjvm.so+0xeb4d30]
[timeout occurred during error reporting in step "printing native stack
[timeout occurred during error reporting in step "printing native stack"] after 33 s.

---------------  P R O C E S S  ---------------

Threads class SMR info:
_java_thread_list=0x00007ff4b0002920, length=14, elements={
0x00007ff4e4015800, 0x00007ff4e4050800, 0x00007ff4e4052800, 0x00007ff4e4058800,
0x00007ff4e405a800, 0x00007ff4e405c800, 0x00007ff4e405f000, 0x00007ff4e4061000,
0x00007ff4e40ac800, 0x00007ff4e47d8800, 0x00007ff4b000a800, 0x00007ff4e4964800,
0x00007ff4e4968000, 0x00007ff4b000f000
}

Java Threads: ( => current thread )
  0x00007ff4e4015800 JavaThread "main" [_thread_in_native, id=20402, stack(0x00007ff4eb1b2000,0x00007ff4eb2b3000)]
  0x00007ff4e4050800 JavaThread "Reference Handler" daemon [_thread_blocked, id=20404, stack(0x00007ff4cb38b000,0x00007ff4cb48c000)]
  0x00007ff4e4052800 JavaThread "Finalizer" daemon [_thread_blocked, id=20405, stack(0x00007ff4cb28a000,0x00007ff4cb38b000)]
  0x00007ff4e4058800 JavaThread "Signal Dispatcher" daemon [_thread_in_vm, id=20406, stack(0x00007ff4cb189000,0x00007ff4cb28a000)]
  0x00007ff4e405a800 JavaThread "Service Thread" daemon [_thread_blocked, id=20407
[timeout occurred during error reporting in step "printing all threads"] after 30 s.
VM state:not at safepoint (normal execution)

VM Mutex/Monitor currently owned by a thread:  ([mutex/lock_event])
[0x00007ff4e4012680] Threads_lock - owner thread: 0x00007ff4e4058800

Heap address: 0x00000000fc000000, size: 64 MB, Compressed Oops mode: 32-bit
Narrow klass base: 0x0000000800000000, Narrow klass shift: 3
Compressed class space size: 1073741824 Address: 0x0000000840000000

Heap:
 def new generation   total 19648K, used 4555K [0x00000000fc000000, 0x00000000fd550000, 0x00000000fd550000)
  eden space 17472K,  18% used [0x00000000fc000000, 0x00000000fc31dcb8, 0x00000000fd110000)
  from space 2176K,  62% used [0x00000000fd330000, 0x00000000fd4850d8, 0x00000000fd550000)
  to   space 2176K,   0% used [0x00000000fd110000, 0x00000000fd110000, 0x00000000fd330000)
 tenured generation   total 43712K, used 8616K [0x00000000fd550000, 0x0000000100000000, 0x0000000100000000)
   the space 43712K,  19% used [0x00000000fd550000, 0x00000000fddba270, 0x00000000fddba400, 0x0000000100000000)
 Metaspace       used 9401K, capacity 9916K, committed 10112K, reserved 1058816K
  class space    used 1218K, capacity 1333K, committed 1408K, reserved 1048576K

Card table byte_map: [0x00007ff4eb17d000,0x00007ff4eb19e000] _byte_map_base: 0x00007ff4ea99d000

Polling page: 0x00007ff4eb2bd000

Metaspace:

Usage:
  Non-class:      8.38 MB capacity,     7.99 MB ( 95%) used,   381.97 KB (  4%) free+waste,    17.81 KB ( <1%) overhead. 
      Class:      1.30 MB capacity,     1.19 MB ( 91%) used,   104.57 KB (  8%) free+waste,    10.12 KB ( <1%) overhead. 
       Both:      9.68 MB capacity,     9.18 MB ( 95%) used,   486.54 KB (  5%) free+waste,    27.94 KB ( <1%) overhead. 

Virtual space:
  Non-class space:       10.00 MB reserved,       8.50 MB
